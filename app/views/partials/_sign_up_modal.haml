#signUpModal.modal.fade{ 'aria-hidden' => 'true', 'aria-labelledby' => 'signUpModalLabel', role: 'dialog', tabindex: '-1' }
  .modal-dialog{ role: 'document' }
    .modal-content
      .modal-header
        %h5#signUpModalLabel.modal-title Sign Up
        %button.close{ 'aria-label' => 'Close', 'data-dismiss' => 'modal', type: 'button' }
          %span{ 'aria-hidden' => 'true' } Ã—
      .modal-body
        = form_for :registration, url: users_path do |f|
          .form-group
            %label{ for: 'registration_first_name' } First name
            = f.text_field :first_name, class: 'form-control'
          .form-group
            %label{ for: 'registration_last_name' } Last name
            = f.text_field :last_name, class: 'form-control'
          .form-group
            %label{ for: 'registration_email' } Email
            = f.email_field :email, class: 'form-control'
            %small#email_validation
          .form-group
            %label{ for: 'registration_password' } Password
            = f.password_field :password, class: 'form-control'
            %small#password_validation
          .form-group
            %label{ for: 'registration_date_of_birth' } Date of birth
            = f.date_field :date_of_birth, class: 'form-control'
          = f.submit 'Submit', class: 'btn btn-primary'

:javascript
  var email_is_valid = $("#registration_email").keyup(function(){
     var email = $(this).val();
     var filter = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
     if (!filter.test(email)) {
       $("#email_validation").text(email + " is not a valid email").css('color', 'red');
       $(this).focus;
    } else {
      var api_root = 'https://showoff-rails-react-production.herokuapp.com/api/v1/users/email'
      var url = `${api_root}?email=${email}&client_id=#{@client_id}&client_secret=#{@client_secret}`
      var email_is_available = false
      fetch(url)
        .then(res => res.json())
        .then(res => res.data.available)
        .then(email_is_available => {
          if (email_is_available) {
            $("#email_validation").text(email + " is available").css('color', '#28a745');
            return true;
          } else {
            $("#email_validation").text(email + " is not available").css('color', 'red');
            return false;
          }
        });
    }
  })

  var password_is_valid = $("#registration_password").keyup(function(){
    var password = $(this).val();
    if (password.length < 8) {
      $('#password_validation').text('Password must be at least 8 characters').css('color', 'red');
      return false;
    } else {
      $('#password_validation').text('')
      return true;
    }
  })

  $("#submit-email").click(function(e){
    if (!email_is_valid) {
       sweetalert('The email address you provide is not valid', 'error');
       $("#registration_email").focus();
       e.preventDefault()
       return false;
    } else {
      if (!password_is_valid) {
        sweetalert('Provided password is too short', 'error');
        $("#registration_email").focus();
        e.preventDefault()
        return false;
      }
    }
  });
